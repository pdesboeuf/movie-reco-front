<!doctype html>
<html lang="en">
<head>
    <!-- <meta> tags> -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <link rel="stylesheet" href="/static/css/index.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css">
    <title>IMBD Analysis</title>
</head>

<body>
    
    <div id="background">
        <div class="container-md">
            {{{body}}}
        </div>
    </div>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script  type="text/javascript" src="/static/js/typeahead.bundle.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js" integrity="sha384-7+zCNj/IqJ95wo16oMtfsKbZ9ccEh31eOz1HGyDuCQ6wgnyJNSYdrPa03rtR1zdB" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js" integrity="sha384-QJHtvGhmr9XOIpI6YVutG+2QOK9T+ZnN4kzFN1RtK3zEFEIsxhlmWl5/YESvpZ13" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</body>

<script type="text/javascript">
    const movieInfos = async function getInfos(id) {
        try {
            /*const { data } = await axios.get(
                "http://localhost:5000/search/id/" + id, {timeout: 1000}
            );*/
            const { data } = await axios({
                method: 'get',
                url: "http://localhost:5000/search/id/" + id,
                timeout: 3000
            });
            //idMovies = data.map(movie => movie.tconst);
            console.log("http://localhost:5000/search/id/" + id + "=>");
            console.log(data);
            if(data.Poster == 'N/A') data.Poster = 'https://imdb-api.com/images/original/nopicture.jpg'
            return data;

        } catch (error) {
            console.log(error);
        }
    };


    $(document).ready(function(){

        var movies_suggestions = new Bloodhound({
            datumTokenizer: Bloodhound.tokenizers.obj.whitespace('title'),
            queryTokenizer: Bloodhound.tokenizers.whitespace,
            local: [{"originalTitle":"L'enfant prodigue","tconst":"tt0000591"},{"originalTitle":"Hamlet","tconst":"tt0000886"},{"originalTitle":"Abraham Lincoln's Clemency","tconst":"tt0001101"},{"originalTitle":"L'auberge rouge","tconst":"tt0001122"}],
            // The url points to a json file that contains an array of country names
            prefetch: {
                url: 'http://localhost:5000/list/'
                /*transform: function (data) {          // we modify the prefetch response
                    var newData = [];                 // here to match the response format 
                    data.forEach(function (item) {    // of the remote endpoint
                        newData.push({'originalTitle': item});
                    });
                    return newData;
                }*/
            },
            identify: function(obj) { return obj.tconst; }
        });
        
        // Initializing the typeahead with remote dataset
        $('.typeahead').typeahead(null, {
            name: 'movies',
            source: movies_suggestions,
            display : function(item) {
                return item.title + ' (' + item.startYear + ')';
            },
            limit: 50 /* Specify maximum number of suggestions to be displayed */
        });

        $('#scrollable-dropdown-menu .typeahead').bind('typeahead:select', function(ev, suggestion) {
            console.log('Selection: ' + suggestion.tconst + '/' + suggestion.title);
            $("#tconst_id").val(suggestion.tconst);
            $("#searchMovie").show();
            let submit_button = $("button[type='submit']");
            
            submit_button.prop("disabled", true);
            if (!submit_button.text().includes('spinner-border')) {
                submit_button.prepend(`<span class="spinner-border spinner-border-sm mr-2" role="status" aria-hidden="true"></span>`);
            }
            
            movieInfos(suggestion.tconst).then(data => {
                if(typeof data !== 'undefined') {
                    $("#poster").attr("src",data.Poster);
                    $("#the-title").text(data.Title);
                    $("#year").text(data.Year);
                    $("#genre").text(data.Genre);
                    $("#imdbRating").text(data.imdbRating);
                    submit_button.prop("disabled", false);
                    submit_button.text("Go !");
                } else {
                    submit_button.prop("disabled", false);
                    submit_button.text("Go !");
                }
            });
            
        });


        $("button[type='submit']").on('click', function(){
            let submit_button = $(this);
            $(this).parents('form').submit((event) => {
                submit_button.attr('disabled', 'disabled');
                if (!submit_button.text().includes('spinner-border')) {
                    submit_button.prepend(`<span class="spinner-border spinner-border-sm mr-2" role="status" aria-hidden="true"></span>`);
                }
            });
        });


    });
</script>

</html>